{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { useRouter } from 'vue-router';\nimport { onMounted, ref } from \"vue\";\nexport default {\n  __name: 'TheHeader',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    let isLoggedIn = ref(false);\n    let isCollaborator = ref(false);\n    let auth;\n    let imageData = '';\n    const signInWithGoogle = () => {\n      const provider = new GoogleAuthProvider();\n      signInWithPopup(getAuth(), provider).then(result => {\n        console.log(result.user);\n        router.push(\"/\");\n        location.reload();\n      }).catch(error => {\n        console.log(\"erro\");\n      });\n    };\n    onMounted(() => {\n      auth = getAuth();\n      onAuthStateChanged(auth, user => {\n        if (user) {\n          isLoggedIn.value = true;\n          if (JSON.parse(localStorage.getItem('backofficeEmails')).includes(user.email)) {\n            isCollaborator.value = true;\n          }\n\n          /*const storedImage = JSON.parse(localStorage.getItem('proposedIniciatives')); // Obtém a imagem armazenada no localStorage\n          if (storedImage) {\n            imageData = storedImage[1].photo; // Exibe a imagem\n          } else {\n            alert('Nenhuma imagem encontrada no localStorage.');\n          }*/\n        } else {\n          isLoggedIn = false;\n        }\n      });\n    });\n    const handleSignOut = () => {\n      signOut(auth).then(() => {\n        router.push(\"/\");\n        location.reload();\n      });\n    };\n    const __returned__ = {\n      router,\n      get isLoggedIn() {\n        return isLoggedIn;\n      },\n      set isLoggedIn(v) {\n        isLoggedIn = v;\n      },\n      get isCollaborator() {\n        return isCollaborator;\n      },\n      set isCollaborator(v) {\n        isCollaborator = v;\n      },\n      get auth() {\n        return auth;\n      },\n      set auth(v) {\n        auth = v;\n      },\n      get imageData() {\n        return imageData;\n      },\n      set imageData(v) {\n        imageData = v;\n      },\n      signInWithGoogle,\n      handleSignOut,\n      get getAuth() {\n        return getAuth;\n      },\n      get GoogleAuthProvider() {\n        return GoogleAuthProvider;\n      },\n      get signInWithPopup() {\n        return signInWithPopup;\n      },\n      get onAuthStateChanged() {\n        return onAuthStateChanged;\n      },\n      get signOut() {\n        return signOut;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      onMounted,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["getAuth","GoogleAuthProvider","signInWithPopup","onAuthStateChanged","signOut","useRouter","onMounted","ref","router","isLoggedIn","isCollaborator","auth","imageData","signInWithGoogle","provider","then","result","console","log","user","push","location","reload","catch","error","value","JSON","parse","localStorage","getItem","includes","email","handleSignOut"],"sources":["C:/Users/Luís/Desktop/SitePW-main/src/components/frontoffice/TheHeader.vue"],"sourcesContent":["<template>\n  <header class=\"header\">\n    <div class=\"left-content\">\n      <img src=\"@/assets/logo-main-image.png\" alt=\"logo\">\n      <h2>GoHelp</h2>\n    </div>\n    <div class=\"right-content\">\n      <router-link to=\"/\"><h3>Home</h3></router-link>\n      <router-link to=\"/iniciatives\"><h3>Iniciativas</h3></router-link>\n      <router-link v-if=\"isCollaborator\" to=\"/dashboard\"><h3>Backoffice</h3></router-link>\n      <h3 @click=\"signInWithGoogle\" v-if=\"!isLoggedIn\">Login</h3>\n      <!--<img v-if=\"imageData\" :src=\"imageData\" alt=\"Imagem\" height=\"100px\" width=\"100px\">-->\n      <h3 @click=\"handleSignOut\" v-if=\"isLoggedIn\">Logout</h3>\n    </div>\n  </header>\n</template>\n\n<script setup>\n    import { getAuth, GoogleAuthProvider,signInWithPopup, onAuthStateChanged, signOut } from \"firebase/auth\"\n    import { useRouter } from 'vue-router'\n    import { onMounted, ref } from \"vue\"\n\n    const router = useRouter()\n    let isLoggedIn = ref(false)\n    let isCollaborator = ref(false)\n    let auth\n    let imageData = ''\n\n    const signInWithGoogle = () => {\n        const provider = new GoogleAuthProvider()\n        signInWithPopup(getAuth(), provider)\n        .then((result) => {\n            console.log(result.user)\n            router.push(\"/\")\n            location.reload()\n        })\n        .catch((error) => {\n            console.log(\"erro\")\n        })\n    }\n\n    onMounted(() => {\n    auth = getAuth()\n    onAuthStateChanged(auth, (user) => {\n      if(user) {\n        isLoggedIn.value = true\n        if(JSON.parse(localStorage.getItem('backofficeEmails')).includes(user.email)) {\n          isCollaborator.value = true\n        }\n\n        /*const storedImage = JSON.parse(localStorage.getItem('proposedIniciatives')); // Obtém a imagem armazenada no localStorage\n        if (storedImage) {\n          imageData = storedImage[1].photo; // Exibe a imagem\n        } else {\n          alert('Nenhuma imagem encontrada no localStorage.');\n        }*/\n      }\n      else {\n        isLoggedIn = false\n      }\n    })\n  })\n\n  const handleSignOut = () => {\n    signOut(auth).then(() => {\n      router.push(\"/\")\n      location.reload()\n    })\n  }\n</script>\n  \n  <style scoped>\n  *{ \n  \n  width: 100%;\n  }\n  \n  h2{\n\n    font-style: italic;\n    font-family: 'Times New Roman', Times, serif;\n    font-size: 3.5em;\n  }\n  \n h3 {\n    color: #fff;\n    font-family: 'Times New Roman', Times, serif;\n    font-size: 1.5em;\n    cursor: pointer;\n    display: inline-block;\n    margin-left: auto;\n    \n\n}\n\nh3:hover {\n    \n    color: #9d9c9c;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5); /* Adiciona uma sombra para destacar o texto */\n    \n}\n\n  \n  .header {\n    color: #fff;\n    display: flex;\n    \n  }\n  \n  .left-content {\n    display: flex;\n    align-items: center;\n  }\n  \n  .right-content {\n    \n    display: flex;\n    align-items: center;\n    width: 50%;\n    text-align: center;\n  \n    \n  }\n  \n  .left-content img {\n    width: 110px;\n    height: 100px;\n  }\n  \n  .right-content img { \n    position: relative;\n    width: 120px;\n    height: 50px;\n  }\n  </style>"],"mappings":";AAkBI,SAASA,OAAO,EAAEC,kBAAkB,EAACC,eAAe,EAAEC,kBAAkB,EAAEC,OAAO,QAAQ,eAAe;AACxG,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,EAAEC,GAAG,QAAQ,KAAK;;;;;;;IAEpC,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;IAC1B,IAAII,UAAU,GAAGF,GAAG,CAAC,KAAK,CAAC;IAC3B,IAAIG,cAAc,GAAGH,GAAG,CAAC,KAAK,CAAC;IAC/B,IAAII,IAAI;IACR,IAAIC,SAAS,GAAG,EAAE;IAElB,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;MAC3B,MAAMC,QAAQ,GAAG,IAAIb,kBAAkB,CAAC,CAAC;MACzCC,eAAe,CAACF,OAAO,CAAC,CAAC,EAAEc,QAAQ,CAAC,CACnCC,IAAI,CAAEC,MAAM,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,IAAI,CAAC;QACxBX,MAAM,CAACY,IAAI,CAAC,GAAG,CAAC;QAChBC,QAAQ,CAACC,MAAM,CAAC,CAAC;MACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QACdP,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACvB,CAAC,CAAC;IACN,CAAC;IAEDZ,SAAS,CAAC,MAAM;MAChBK,IAAI,GAAGX,OAAO,CAAC,CAAC;MAChBG,kBAAkB,CAACQ,IAAI,EAAGQ,IAAI,IAAK;QACjC,IAAGA,IAAI,EAAE;UACPV,UAAU,CAACgB,KAAK,GAAG,IAAI;UACvB,IAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAACC,QAAQ,CAACX,IAAI,CAACY,KAAK,CAAC,EAAE;YAC5ErB,cAAc,CAACe,KAAK,GAAG,IAAI;UAC7B;;UAEA;AACR;AACA;AACA;AACA;AACA;QACM,CAAC,MACI;UACHhB,UAAU,GAAG,KAAK;QACpB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAMuB,aAAa,GAAGA,CAAA,KAAM;MAC1B5B,OAAO,CAACO,IAAI,CAAC,CAACI,IAAI,CAAC,MAAM;QACvBP,MAAM,CAACY,IAAI,CAAC,GAAG,CAAC;QAChBC,QAAQ,CAACC,MAAM,CAAC,CAAC;MACnB,CAAC,CAAC;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}